payrecord.read.sql=\
  SELECT INTEGER(r.MEMBER_MEMBERID) AS MEMBER_NUMBER, t.GLPOSTEDDATE AS PAYROLL_DATE, \
  t.DESCRIPTION, t.AMOUNT, t."HOURS" AS QUANTITY, w."NUMBER" AS WORK_ORDER_NUMBER, w.PROJECTNAME AS WORK_ORDER_NAME, CASE TRANSACTIONSUBTY WHEN '647' THEN w.OVERTIMEPAYRATE / 1000. ELSE w.PAYRATE / 1000. END AS PAYRATE, \
  payrate.CODE AS PAY_RATE_UNIT, transtype.CODE AS "TYPE", w.STARTDATE AS WORK_ORDER_START_DATE, w.ENDDATE AS WORK_ORDER_END_DATE, enddatetype.CODE AS WORK_ORDER_END_DATE_TYPE, weekendingdaytype.CODE AS WORK_ORDER_WEEK_ENDING_DAY \
  FROM VAP.TRANSACTIONRECOR t \
  LEFT JOIN VAP.WORKORDER w ON T.CONTRACTID = w.ID \
  LEFT JOIN VAP.ROLE r ON t.ROLE_ID = r.ID \
  LEFT JOIN VAP.VALIDVALUEENTRY payrate ON w.PAYRATEUNITVV = payrate.ID \
  LEFT JOIN VAP.VALIDVALUEENTRY transtype ON t.TRANSACTIONSUBTY = transtype.ID \
  LEFT JOIN VAP.VALIDVALUEENTRY enddatetype ON w.ENDDATETYPEVV = enddatetype.ID \
  LEFT JOIN VAP.VALIDVALUEENTRY weekendingdaytype ON w.WEEKENDINGDAYVV = weekendingdaytype.ID \
  WHERE t.TRANSACTIONTYPEV = '648' AND t.TRANSACTIONSTATU = '276' AND GLPOSTEDDATE = ? \
  ORDER BY t.GLPOSTEDDATE, t.ROLE_ID, t.TRANSACTIONSUBTY, t.DESCRIPTION

payrecord.write.sql=\
  INSERT INTO VAP.EXP_PAY_RECORD (MEMBER_NUMBER, PAYROLL_DATE, DESCRIPTION, AMOUNT, QUANTITY, WO_NUMBER, WO_NAME, PAYRATE, PAYRATE_UNIT, TRANS_TYPE, WO_START_DATE, WO_END_DATE, WO_WEEK_ENDING_DAY, TIME_PERIOD_START_DATE, TIME_PERIOD_END_DATE, JOB_ID) \
  VALUES(:memberNumber, :payrollDateAsDate, :description, :amount, :quantity, :workOrderNumber, :workOrderName, :payRate, :payRateUnit, :type, :workOrderStartDateAsDate, :workOrderEndDateAsDate, :workOrderWeekEndingDay, :timePeriodStartDateAsDate, :timePeriodEndDateAsDate, :jobId)

payrecord.summary.read.sql=\
  SELECT INTEGER(MEMBER_NUMBER), PAYROLL_DATE, SUM(AMOUNT) AS AMOUNT, SUM(QUANTITY) AS QUANTITY, PAYRATE, PAYRATE_UNIT AS PAY_RATE_UNIT, TRANS_TYPE AS TYPE, WO_NUMBER AS WORK_ORDER_NUMBER, TIME_PERIOD_START_DATE, TIME_PERIOD_END_DATE, JOB_ID \
  FROM VAP.EXP_PAY_RECORD \
  WHERE PAYROLL_DATE = ? \
  GROUP BY PAYROLL_DATE, MEMBER_NUMBER, TIME_PERIOD_START_DATE, TIME_PERIOD_END_DATE, WO_NUMBER, TRANS_TYPE, PAYRATE_UNIT, PAYRATE, JOB_ID \
  ORDER BY MEMBER_NUMBER

payrecord.summary.write.sql=\
  INSERT INTO VAP.EXP_PAY_RECORD_SUMMARY \
  (MEMBER_NUMBER, PAYROLL_DATE, AMOUNT, QUANTITY, PAYRATE, PAYRATE_UNIT, TRANS_TYPE, WO_NUMBER, TIME_PERIOD_START_DATE, TIME_PERIOD_END_DATE, JOB_ID) \
  VALUES(:memberNumber, :payrollDateAsDate, :amount, :quantity, :payRate, :payRateUnit, :type, :workOrderNumber, :timePeriodStartDateAsDate, :timePeriodEndDateAsDate, :jobId)

payroll.detail.write.sql=\
    INSERT INTO VAP.EXP_PAYROLL_DETAIL \
    (MEMBER_NUMBER, PAYROLL_DATE, GROSSPAYROLL, NETPAYROLL, FREQUENCY, LIVED_CODE, WORKED_CODE, FEDWHAM, STATEWHAM, LSTATEWHAM, COUNTYWHAM, CITYWHAM, FEDEXAM, BENEFICIARY_REGISTEREDFLAG, J_MEDICALINS, B_DISABILITYINS, I_LIFEINS, D_DENTALINS, ELEVEN_ROTH_401K, K_EMPLOYEE401K, N_NETADVANCE, G_GARNISHMENT1, FIFTYONE_GARNISHMENT2, FIFTYTWO_GARNISHMENT3, FIFTYTHREE_GARNISHMENT4, FIVEFOUR_GARNISHMENT5, L_401K_LOAN2, FORTYONE_401K_LOAN1, D_PAYROLLADD2, C_AMEX1401, R_AMEX2989, M_MBOPMT1429, T_TTPMT1430, P_SUPPLI, Q_SUPPLISP, QP_PARKING_PRE, QPP_PARKING_POST, QT_TRANSIT_PRE, QTP_TRANSIT_POST, F_LST, SUIDI, MIE, MIS, MIC, MIF, CIE, CIS, CIC, CIF, JOB_ID) \
    VALUES(:memberNumber, :payrollDateAsDate, :grossAmount, :netAmount, :frequency, :livedInCode, :workedInCode, :federalWithholdingAmount, :lStateWithholdingAmount, :stateWithholdingAmount, :countyWithholdingAmount, :cityWithholdingAmount, :federalExemptAmount, :beneficiaryRegisteredFlag, :jMedicalInsuranceAmount, :bDisabilityInsuranceAmount, :iLifeInsuranceAmount, :dDentailInsuranceAmount, :elevenRoth401kAmount, :kEmployee401kAmount, :nNetAdvanceAmount, :gGarnishment1Amount, :fiftyOneGarnish2Amount, :fiftyTwoGarnish3Amount, :fiftyThreeGarnish4Amount, :fiftyFourGarnish5Amount, :l401kLoan2Amount, :fortyOne401kLoan1Amount, :dPayrollAdd2Amount, :cAmex1401Amount, :rAmex2989Amount, :mMboPmt1429Amount, :tTtPmt1430Amount, :pSuppliAmount, :qSupplispAmount, :qpParkingPreAmount, :qppParkingPostAmount, :qtTransitPreAmount, :qtpTransitPostAmount, :fLocalServicesTaxAmount, :suidiAmount, :mieAmount, :misAmount, :micAmount, :mifAmount, :cieAmount, :cisAmount, :cicAmount, :cifAmount, :jobId)

payroll.detail.read.sql=\
    SELECT  \
        INTEGER(ADPPayrollExportQry.MEMBER_MEMBERID) AS MEMBER_NUMBER,    \
        DATE(ADPPayrollExportQry.PAYROLLDATE) AS PAYROLL_DATE, \
        ADPPayrollExportQry.LIVED_CODE, \
        ADPPayrollExportQry.WORKED_CODE, \
        ADPPayrollExportQry.WITHHOLDINGAMOUN as FEDWHAM,  \
        ADPPayrollExportQry.WITHHOLDING / 100. as STATEWHAM,  \
        ADPPayrollExportQry.LS_WITHHOLDING / 100. as LSTATEWHAM,  \
        ADPPayrollExportQry.COUNTY_WITHHOLDING / 100. as COUNTYWHAM,  \
        ADPPayrollExportQry.LOCALITYWITHHOLDING / 100. as CITYWHAM,  \
        ADPPayrollExportQry.FEDEXEMPTAMOUNT as FEDEXAM,  \
        ADPPayrollExportQry.BENEFICIARY_REGISTEREDFLAG, \
        MIN(case TRANSACTIONSUBTY when '202' then FREQ else null end) as FREQUENCY, \
        sum(case TRANSACTIONSUBTY when '763' then AMOUNT else 0 end) as J_MEDICALINS, \
        sum(case TRANSACTIONSUBTY when '766' then AMOUNT else 0 end) as B_DISABILITYINS, \
        sum(case TRANSACTIONSUBTY when '765' then AMOUNT else 0 end) as I_LIFEINS, \
        sum(case TRANSACTIONSUBTY when '764' then AMOUNT else 0 end) as D_DENTALINS, \
        sum(case TRANSACTIONSUBTY when '202' then AMOUNT else null end) as GROSSPAYROLL, \
        sum(case TRANSACTIONSUBTY when '203' then AMOUNT else 0 end) as NETPAYROLL, \
        sum(case TRANSACTIONSUBTY when '2465' then AMOUNT else 0 end) as ELEVEN_ROTH_401K, \
        sum(case TRANSACTIONSUBTY when '207' then AMOUNT else 0 end) as K_EMPLOYEE401K, \
        sum(case TRANSACTIONSUBTY when '327' then AMOUNT else 0 end) as N_NETADVANCE, \
        sum(case TRANSACTIONSUBTY when '208' then AMOUNT else 0 end) as G_GARNISHMENT1, \
        sum(case TRANSACTIONSUBTY when '785' then AMOUNT else 0 end) as FIFTYONE_GARNISHMENT2, \
        sum(case TRANSACTIONSUBTY when '786' then AMOUNT else 0 end) as FIFTYTWO_GARNISHMENT3, \
        sum(case TRANSACTIONSUBTY when '2425' then AMOUNT else 0 end) as FIFTYTHREE_GARNISHMENT4, \
        sum(case TRANSACTIONSUBTY when '2426' then AMOUNT else 0 end) as FIVEFOUR_GARNISHMENT5, \
        sum(case TRANSACTIONSUBTY when '209' then AMOUNT else 0 end) as L_401K_LOAN2, \
        sum(case TRANSACTIONSUBTY when '329' then AMOUNT else 0 end) as FORTYONE_401K_LOAN1, \
        sum(case TRANSACTIONSUBTY when '1174' then AMOUNT else 0 end) as D_PAYROLLADD2, \
        sum(case TRANSACTIONSUBTY when '1401' then AMOUNT else 0 end) as C_AMEX1401, \
        sum(case TRANSACTIONSUBTY when '2989' then AMOUNT else 0 end) as R_AMEX2989, \
        sum(case TRANSACTIONSUBTY when '1429' then AMOUNT else 0 end) as M_MBOPMT1429, \
        sum(case TRANSACTIONSUBTY when '1430' then AMOUNT else 0 end) as T_TTPMT1430, \
        sum(case TRANSACTIONSUBTY when '2088' then AMOUNT else 0 end) as P_SUPPLI, \
        sum(case TRANSACTIONSUBTY when '2089' then AMOUNT else 0 end) as Q_SUPPLISP, \
        sum(case TRANSACTIONSUBTY when '3135' then AMOUNT else 0 end) as QP_PARKING_PRE, \
        sum(case TRANSACTIONSUBTY when '3136' then AMOUNT else 0 end) as QPP_PARKING_POST, \
        sum(case TRANSACTIONSUBTY when '3137' then AMOUNT else 0 end) as QT_TRANSIT_PRE, \
        sum(case TRANSACTIONSUBTY when '3138' then AMOUNT else 0 end) as QTP_TRANSIT_POST, \
        sum(case TRANSACTIONSUBTY when '2267' then AMOUNT else 0 end) as F_LST, \
        sum(case TRANSACTIONSUBTY when '205' then AMOUNT else 0 end) as SUIDI, \
        sum(case TRANSACTIONSUBTY when '3162' then AMOUNT else 0 end) as MIE, \
        sum(case TRANSACTIONSUBTY when '3163' then AMOUNT else 0 end) as MIS, \
        sum(case TRANSACTIONSUBTY when '3164' then AMOUNT else 0 end) as MIC, \
        sum(case TRANSACTIONSUBTY when '3165' then AMOUNT else 0 end) as MIF, \
        sum(case TRANSACTIONSUBTY when '3166' then AMOUNT else 0 end) as CIE, \
        sum(case TRANSACTIONSUBTY when '3167' then AMOUNT else 0 end) as CIS, \
        sum(case TRANSACTIONSUBTY when '3168' then AMOUNT else 0 end) as CIC, \
        sum(case TRANSACTIONSUBTY when '3169' then AMOUNT else 0 end) as CIF \
    FROM  \
        ( \
        SELECT  \
            VAP.ROLE.MEMBER_MEMBERID,   \
            Sum(VAP.TRANSACTIONRECOR.AMOUNT) AS AMOUNT,  \
            Min(VAP.TRANSACTIONRECOR.MEMO1) AS FREQ, \
            MAX(DATE(VAP.TRANSACTIONRECOR.GLPOSTEDDATE)) AS PAYROLLDATE, \
            VAP.TRANSACTIONRECOR.TRANSACTIONSUBTY, \
            LIVED_STATE.CODE AS LIVED_CODE,  \
            WORKED_STATE.CODE AS WORKED_CODE,  \
            WORKED_PAYROLLSTATE.EXEMPT AS WORKED_EXEMPT,  \
            VAP.PAYROLLPROFILE.WITHHOLDINGAMOUN,  \
            WORKED_PAYROLLSTATE.LOCALITYWITHHOLDING,  \
            WORKED_PAYROLLSTATE.COUNTY_WITHHOLDING,  \
            WORKED_PAYROLLSTATE.WITHHOLDING,  \
            LIVED_PAYROLLSTATE.WITHHOLDING AS LS_WITHHOLDING,  \
            VAP.PAYROLLPROFILE.FEDEXEMPTAMOUNT, \
            VAP.ROLE.BENEFICIARY_REGISTEREDFLAG \
        FROM VAP.TRANSACTIONRECOR  \
            JOIN VAP.ROLE ON VAP.TRANSACTIONRECOR.ROLE_ID = VAP.ROLE.ID \
            JOIN VAP.PAYROLLPROFILE ON VAP.ROLE.PAYROLLPROFILE_I = VAP.PAYROLLPROFILE.ID \
            JOIN VAP.PAYROLLSTATE AS WORKED_PAYROLLSTATE ON WORKED_PAYROLLSTATE.PAYROLLPROFILE_ID = VAP.PAYROLLPROFILE.ID \
            JOIN VAP.PAYROLLSTATE AS LIVED_PAYROLLSTATE ON LIVED_PAYROLLSTATE.PAYROLLPROFILE_ID = VAP.PAYROLLPROFILE.ID \
            JOIN VAP.VALIDVALUEENTRY AS LIVED_STATE ON LIVED_PAYROLLSTATE.STATEVV = LIVED_STATE.ID \
            JOIN VAP.VALIDVALUEENTRY AS WORKED_STATE ON WORKED_PAYROLLSTATE.STATEVV = WORKED_STATE.ID \
        WHERE \
            (LIVED_PAYROLLSTATE.TYPEVV = '1344' OR LIVED_PAYROLLSTATE.TYPEVV = '1346')  \
            AND (WORKED_PAYROLLSTATE.TYPEVV = '1345' OR WORKED_PAYROLLSTATE.TYPEVV= '1346') \
            AND DATE(VAP.TRANSACTIONRECOR.GLPOSTEDDATE) = ? \
            AND VAP.ROLE.MEMBER_MEMBERID IS NOT NULL \
            AND VAP.ROLE.COMPANYNAMEVV= '2324' \
            AND VAP.ROLE.TECH = 'Member' \
            AND (VAP.ROLE.MEMBER_SUBTYPEVV = '2330' OR VAP.ROLE.MEMBER_SUBTYPEVV= '705') \
        GROUP BY  \
            VAP.ROLE.MEMBER_MEMBERID,  \
            VAP.TRANSACTIONRECOR.GLPOSTEDDATE, \
            VAP.PAYROLLPROFILE.ID, \
            VAP.TRANSACTIONRECOR.TRANSACTIONSUBTY, \
            LIVED_STATE.CODE,  \
            WORKED_STATE.CODE,  \
            WORKED_PAYROLLSTATE.EXEMPT,  \
            VAP.PAYROLLPROFILE.WITHHOLDINGAMOUN,  \
            WORKED_PAYROLLSTATE.WITHHOLDING,  \
            LIVED_PAYROLLSTATE.WITHHOLDING,  \
            WORKED_PAYROLLSTATE.COUNTY_WITHHOLDING,  \
            WORKED_PAYROLLSTATE.LOCALITYWITHHOLDING,  \
            VAP.PAYROLLPROFILE.FEDEXEMPTAMOUNT, \
            VAP.ROLE.BENEFICIARY_REGISTEREDFLAG \
        ) AS ADPPayrollExportQry  \
    GROUP BY  \
        ADPPayrollExportQry.MEMBER_MEMBERID,  \
        ADPPayrollExportQry.PAYROLLDATE, \
        ADPPayrollExportQry.LIVED_CODE,  \
        ADPPayrollExportQry.WORKED_CODE,  \
        ADPPayrollExportQry.WORKED_EXEMPT,  \
        ADPPayrollExportQry.WITHHOLDINGAMOUN,  \
        ADPPayrollExportQry.WITHHOLDING,  \
        ADPPayrollExportQry.LS_WITHHOLDING,  \
        ADPPayrollExportQry.COUNTY_WITHHOLDING,  \
        ADPPayrollExportQry.LOCALITYWITHHOLDING,  \
        ADPPayrollExportQry.FEDEXEMPTAMOUNT,  \
        ADPPayrollExportQry.BENEFICIARY_REGISTEREDFLAG \
    ORDER BY  \
	    INTEGER(ADPPayrollExportQry.MEMBER_MEMBERID)  \
    WITH UR